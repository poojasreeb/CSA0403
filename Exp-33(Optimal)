#include <stdio.h>

#define MAX_FRAMES 3
#define MAX_PAGES 20

int predict(int pages[], int frames[], int n, int index) {
    int res = -1, farthest = index;
    for (int i = 0; i < MAX_FRAMES; i++) {
        int j;
        for (j = index; j < n; j++) {
            if (frames[i] == pages[j]) {
                if (j > farthest) {
                    farthest = j;
                    res = i;
                }
                break;
            }
        }
        if (j == n) return i;
    }
    return res == -1 ? 0 : res;
}

int main() {
    int pages[MAX_PAGES], frames[MAX_FRAMES];
    int n, pageFaults = 0, i, j, found, filled = 0;

    printf("Enter number of pages: ");
    scanf("%d", &n);

    printf("Enter page reference string: ");
    for (i = 0; i < n; i++) {
        scanf("%d", &pages[i]);
    }

    for (i = 0; i < MAX_FRAMES; i++) {
        frames[i] = -1;
    }

    for (i = 0; i < n; i++) {
        found = 0;
        for (j = 0; j < MAX_FRAMES; j++) {
            if (frames[j] == pages[i]) {
                found = 1;
                break;
            }
        }

        if (!found) {
            if (filled < MAX_FRAMES) {
                frames[filled++] = pages[i];
            } else {
                int pos = predict(pages, frames, n, i + 1);
                frames[pos] = pages[i];
            }
            pageFaults++;
        }

        printf("Frames: ");
        for (j = 0; j < MAX_FRAMES; j++) {
            if (frames[j] != -1)
                printf("%d ", frames[j]);
            else
                printf("- ");
        }
        printf("\n");
    }

    printf("Total Page Faults: %d\n", pageFaults);
    return 0;
}
