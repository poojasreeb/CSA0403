#include <stdio.h>
#include <stdlib.h>

void sort(int arr[], int n) {
    int i, j, temp;
    for (i = 0; i < n - 1; i++)
        for (j = 0; j < n - i - 1; j++)
            if (arr[j] > arr[j + 1]) {
                temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
}

int main() {
    int request[100], n, head, disk_size, direction, i, j, totalSeek = 0, pos;

    printf("Enter number of disk I/O requests: ");
    scanf("%d", &n);

    printf("Enter the request queue: ");
    for (i = 0; i < n; i++)
        scanf("%d", &request[i]);

    printf("Enter initial head position: ");
    scanf("%d", &head);

    printf("Enter total disk size: ");
    scanf("%d", &disk_size);

    printf("Enter direction (0 for left, 1 for right): ");
    scanf("%d", &direction);

    request[n++] = head;
    request[n++] = (direction == 1) ? disk_size - 1 : 0;

    sort(request, n);

    for (i = 0; i < n; i++) {
        if (request[i] == head) {
            pos = i;
            break;
        }
    }

    printf("\nOrder of servicing:\n%d", head);

    if (direction == 1) {
        for (i = pos + 1; i < n; i++) {
            totalSeek += abs(request[i] - head);
            head = request[i];
            printf(" -> %d", head);
        }
        for (i = pos - 1; i >= 0; i--) {
            totalSeek += abs(request[i] - head);
            head = request[i];
            printf(" -> %d", head);
        }
    } else {
        for (i = pos - 1; i >= 0; i--) {
            totalSeek += abs(request[i] - head);
            head = request[i];
            printf(" -> %d", head);
        }
        for (i = pos + 1; i < n; i++) {
            totalSeek += abs(request[i] - head);
            head = request[i];
            printf(" -> %d", head);
        }
    }

    printf("\n\nTotal Seek Time = %d\n", totalSeek);
    printf("Average Seek Time = %.2f\n", (float)totalSeek / (n - 2));

    return 0;
}
